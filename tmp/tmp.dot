strict digraph "" {
	"module#locked"	[type=module];
	"module#locked" -> "input#inputs[0]";
	"module#locked" -> "input#inputs[1]";
	"module#locked" -> "input#inputs[2]";
	"module#locked" -> "input#inputs[3]";
	"module#locked" -> "input#inputs[4]";
	"module#locked" -> "input#inputs[5]";
	"module#locked" -> "input#inputs[6]";
	"module#locked" -> "input#inputs[7]";
	"module#locked" -> "input#key[0]";
	"module#locked" -> "input#key[1]";
	"module#locked" -> "input#key[2]";
	"module#locked" -> "input#key[3]";
	"module#locked" -> "input#key[4]";
	"module#locked" -> "input#key[5]";
	"module#locked" -> "input#key[6]";
	"module#locked" -> "input#key[7]";
	"output#out[0]" -> "module#locked";
	"output#out[1]" -> "module#locked";
	"module#s"	[init_name=s,
		module_name=sarlock,
		type=module];
	"input#inputs[0]" -> "module#s";
	"module#s1"	[init_name=s1,
		module_name=sarlock,
		type=module];
	"input#inputs[0]" -> "module#s1";
	"input#inputs[1]" -> "module#s";
	"input#inputs[1]" -> "module#s1";
	"input#inputs[2]" -> "module#s";
	"input#inputs[2]" -> "module#s1";
	"input#inputs[3]" -> "module#s";
	"input#inputs[3]" -> "module#s1";
	"input#inputs[4]" -> "module#s";
	"input#inputs[4]" -> "module#s1";
	"input#inputs[5]" -> "module#s";
	"input#inputs[5]" -> "module#s1";
	"input#inputs[6]" -> "module#s";
	"input#inputs[6]" -> "module#s1";
	"input#inputs[7]" -> "module#s";
	"input#inputs[7]" -> "module#s1";
	"input#key[0]" -> "module#s";
	"input#key[0]" -> "module#s1";
	"input#key[1]" -> "module#s";
	"input#key[1]" -> "module#s1";
	"input#key[2]" -> "module#s";
	"input#key[2]" -> "module#s1";
	"input#key[3]" -> "module#s";
	"input#key[3]" -> "module#s1";
	"input#key[4]" -> "module#s";
	"input#key[4]" -> "module#s1";
	"input#key[5]" -> "module#s";
	"input#key[5]" -> "module#s1";
	"input#key[6]" -> "module#s";
	"input#key[6]" -> "module#s1";
	"input#key[7]" -> "module#s";
	"input#key[7]" -> "module#s1";
	"module#s" -> "output#out[0]";
	"module#s1" -> "output#out[1]";
}
