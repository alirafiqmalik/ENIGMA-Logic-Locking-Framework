{
    "AST": {
        "orginal_code": "module locked(inputs, key, out);\ninput [7:0] inputs;\ninput [7:0] key;\noutput out;\nsarlock s(.inputs(inputs), .key(key), .lock_out(out));\nendmodule\n\nmodule ckt(a,b,c);\ninput [3:0] a,b;\noutput [4:0] c;\nassign\tc = a + b;\nendmodule\n\nmodule sarlock (inputs, key, lock_out);\ninput [7:0] inputs;\ninput [7:0] key;\noutput lock_out;\nreg keyx = 8'b01101101;\nassign lock_out =ckt_out[0]^( (inputs == key) & (inputs != keyx));\nwire [4:0]ckt_out; \nckt c(.a(inputs[3:0]), .b(inputs[7:4]), .c(ckt_out));\nendmodule\n",
        "gate_level_flattened": "/* Generated by Yosys 0.20+22 (git sha1 UNKNOWN, clang 10.0.0-4ubuntu1 -fPIC -Os) */\n\nmodule locked(inputs, key, out);\n  wire _00_;\n  wire _01_;\n  wire _02_;\n  wire _03_;\n  wire _04_;\n  wire _05_;\n  wire _06_;\n  wire _07_;\n  wire _08_;\n  wire _09_;\n  wire _10_;\n  wire _11_;\n  wire _12_;\n  wire _13_;\n  wire _14_;\n  wire _15_;\n  wire _16_;\n  wire _17_;\n  wire _18_;\n  wire _19_;\n  wire _20_;\n  wire _21_;\n  wire _22_;\n  wire _23_;\n  wire _24_;\n  wire _25_;\n  wire _26_;\n  wire _27_;\n  wire _28_;\n  wire _29_;\n  wire _30_;\n  wire _31_;\n  wire _32_;\n  wire _33_;\n  wire _34_;\n  wire _35_;\n  input [7:0] inputs;\n  wire [7:0] inputs;\n  input [7:0] key;\n  wire [7:0] key;\n  output out;\n  wire out;\n  wire [3:0] \\s.c.a ;\n  wire [3:0] \\s.c.b ;\n  wire [4:0] \\s.c.c ;\n  wire [4:0] \\s.ckt_out ;\n  wire [7:0] \\s.inputs ;\n  wire [7:0] \\s.key ;\n  wire \\s.keyx ;\n  wire \\s.lock_out ;\n  NOT_g _36_ (\n    .A(inputs[3]),\n    .Y(_00_)\n  );\n  XNOR_g _37_ (\n    .A(inputs[0]),\n    .B(key[0]),\n    .Y(_01_)\n  );\n  XNOR_g _38_ (\n    .A(inputs[7]),\n    .B(key[7]),\n    .Y(_02_)\n  );\n  AND_g _39_ (\n    .A(_01_),\n    .B(_02_),\n    .Y(_03_)\n  );\n  XNOR_g _40_ (\n    .A(inputs[1]),\n    .B(key[1]),\n    .Y(_04_)\n  );\n  XNOR_g _41_ (\n    .A(inputs[3]),\n    .B(key[3]),\n    .Y(_05_)\n  );\n  AND_g _42_ (\n    .A(_04_),\n    .B(_05_),\n    .Y(_06_)\n  );\n  AND_g _43_ (\n    .A(_03_),\n    .B(_06_),\n    .Y(_07_)\n  );\n  NOR_g _44_ (\n    .A(inputs[5]),\n    .B(inputs[6]),\n    .Y(_08_)\n  );\n  NOR_g _45_ (\n    .A(inputs[4]),\n    .B(inputs[7]),\n    .Y(_09_)\n  );\n  AND_g _46_ (\n    .A(_08_),\n    .B(_09_),\n    .Y(_10_)\n  );\n  NOR_g _47_ (\n    .A(inputs[1]),\n    .B(inputs[2]),\n    .Y(_11_)\n  );\n  AND_g _48_ (\n    .A(inputs[0]),\n    .B(_00_),\n    .Y(_12_)\n  );\n  AND_g _49_ (\n    .A(_11_),\n    .B(_12_),\n    .Y(_13_)\n  );\n  NAND_g _50_ (\n    .A(_10_),\n    .B(_13_),\n    .Y(_14_)\n  );\n  XNOR_g _51_ (\n    .A(inputs[5]),\n    .B(key[5]),\n    .Y(_15_)\n  );\n  XNOR_g _52_ (\n    .A(inputs[2]),\n    .B(key[2]),\n    .Y(_16_)\n  );\n  AND_g _53_ (\n    .A(_15_),\n    .B(_16_),\n    .Y(_17_)\n  );\n  XNOR_g _54_ (\n    .A(inputs[6]),\n    .B(key[6]),\n    .Y(_18_)\n  );\n  XNOR_g _55_ (\n    .A(inputs[4]),\n    .B(key[4]),\n    .Y(_19_)\n  );\n  AND_g _56_ (\n    .A(_18_),\n    .B(_19_),\n    .Y(_20_)\n  );\n  AND_g _57_ (\n    .A(_17_),\n    .B(_20_),\n    .Y(_21_)\n  );\n  AND_g _58_ (\n    .A(_14_),\n    .B(_21_),\n    .Y(_22_)\n  );\n  NAND_g _59_ (\n    .A(_07_),\n    .B(_22_),\n    .Y(_23_)\n  );\n  XNOR_g _60_ (\n    .A(\\s.c.c [0]),\n    .B(_23_),\n    .Y(out)\n  );\n  AND_g _61_ (\n    .A(inputs[0]),\n    .B(inputs[4]),\n    .Y(_24_)\n  );\n  NAND_g _62_ (\n    .A(inputs[1]),\n    .B(inputs[5]),\n    .Y(_25_)\n  );\n  XOR_g _63_ (\n    .A(inputs[1]),\n    .B(inputs[5]),\n    .Y(_26_)\n  );\n  NAND_g _64_ (\n    .A(_24_),\n    .B(_26_),\n    .Y(_27_)\n  );\n  XOR_g _65_ (\n    .A(_24_),\n    .B(_26_),\n    .Y(\\s.c.c [1])\n  );\n  NAND_g _66_ (\n    .A(_25_),\n    .B(_27_),\n    .Y(_28_)\n  );\n  NAND_g _67_ (\n    .A(inputs[2]),\n    .B(inputs[6]),\n    .Y(_29_)\n  );\n  XOR_g _68_ (\n    .A(inputs[2]),\n    .B(inputs[6]),\n    .Y(_30_)\n  );\n  NAND_g _69_ (\n    .A(_28_),\n    .B(_30_),\n    .Y(_31_)\n  );\n  XOR_g _70_ (\n    .A(_28_),\n    .B(_30_),\n    .Y(\\s.c.c [2])\n  );\n  NAND_g _71_ (\n    .A(_29_),\n    .B(_31_),\n    .Y(_32_)\n  );\n  NAND_g _72_ (\n    .A(inputs[3]),\n    .B(inputs[7]),\n    .Y(_33_)\n  );\n  XOR_g _73_ (\n    .A(inputs[3]),\n    .B(inputs[7]),\n    .Y(_34_)\n  );\n  NAND_g _74_ (\n    .A(_32_),\n    .B(_34_),\n    .Y(_35_)\n  );\n  XOR_g _75_ (\n    .A(_32_),\n    .B(_34_),\n    .Y(\\s.c.c [3])\n  );\n  XOR_g _76_ (\n    .A(inputs[0]),\n    .B(inputs[4]),\n    .Y(\\s.c.c [0])\n  );\n  NAND_g _77_ (\n    .A(_33_),\n    .B(_35_),\n    .Y(\\s.c.c [4])\n  );\n  assign \\s.ckt_out  = \\s.c.c ;\n  assign \\s.inputs  = inputs;\n  assign \\s.key  = key;\n  assign \\s.keyx  = 1'h1;\n  assign \\s.lock_out  = out;\n  assign \\s.c.a  = inputs[3:0];\n  assign \\s.c.b  = inputs[7:4];\nendmodule\n",
        "gate_level_not_flattened": "/* Generated by Yosys 0.20+22 (git sha1 UNKNOWN, clang 10.0.0-4ubuntu1 -fPIC -Os) */\n\nmodule ckt(a, b, c);\n  wire _00_;\n  wire _01_;\n  wire _02_;\n  wire _03_;\n  wire _04_;\n  wire _05_;\n  wire _06_;\n  wire _07_;\n  wire _08_;\n  wire _09_;\n  wire _10_;\n  wire _11_;\n  input [3:0] a;\n  wire [3:0] a;\n  input [3:0] b;\n  wire [3:0] b;\n  output [4:0] c;\n  wire [4:0] c;\n  AND_g _12_ (\n    .A(a[0]),\n    .B(b[0]),\n    .Y(_00_)\n  );\n  NAND_g _13_ (\n    .A(a[1]),\n    .B(b[1]),\n    .Y(_01_)\n  );\n  XOR_g _14_ (\n    .A(a[1]),\n    .B(b[1]),\n    .Y(_02_)\n  );\n  NAND_g _15_ (\n    .A(_00_),\n    .B(_02_),\n    .Y(_03_)\n  );\n  XOR_g _16_ (\n    .A(_00_),\n    .B(_02_),\n    .Y(c[1])\n  );\n  NAND_g _17_ (\n    .A(_01_),\n    .B(_03_),\n    .Y(_04_)\n  );\n  NAND_g _18_ (\n    .A(a[2]),\n    .B(b[2]),\n    .Y(_05_)\n  );\n  XOR_g _19_ (\n    .A(a[2]),\n    .B(b[2]),\n    .Y(_06_)\n  );\n  NAND_g _20_ (\n    .A(_04_),\n    .B(_06_),\n    .Y(_07_)\n  );\n  XOR_g _21_ (\n    .A(_04_),\n    .B(_06_),\n    .Y(c[2])\n  );\n  NAND_g _22_ (\n    .A(_05_),\n    .B(_07_),\n    .Y(_08_)\n  );\n  NAND_g _23_ (\n    .A(a[3]),\n    .B(b[3]),\n    .Y(_09_)\n  );\n  XOR_g _24_ (\n    .A(a[3]),\n    .B(b[3]),\n    .Y(_10_)\n  );\n  NAND_g _25_ (\n    .A(_08_),\n    .B(_10_),\n    .Y(_11_)\n  );\n  XOR_g _26_ (\n    .A(_08_),\n    .B(_10_),\n    .Y(c[3])\n  );\n  XOR_g _27_ (\n    .A(a[0]),\n    .B(b[0]),\n    .Y(c[0])\n  );\n  NAND_g _28_ (\n    .A(_09_),\n    .B(_11_),\n    .Y(c[4])\n  );\nendmodule\n\nmodule locked(inputs, key, out);\n  input [7:0] inputs;\n  wire [7:0] inputs;\n  input [7:0] key;\n  wire [7:0] key;\n  output out;\n  wire out;\n  sarlock s (\n    .inputs(inputs),\n    .key(key),\n    .lock_out(out)\n  );\nendmodule\n\nmodule sarlock(inputs, key, lock_out);\n  wire _00_;\n  wire _01_;\n  wire _02_;\n  wire _03_;\n  wire _04_;\n  wire _05_;\n  wire _06_;\n  wire _07_;\n  wire _08_;\n  wire _09_;\n  wire _10_;\n  wire _11_;\n  wire _12_;\n  wire _13_;\n  wire _14_;\n  wire _15_;\n  wire _16_;\n  wire _17_;\n  wire _18_;\n  wire _19_;\n  wire _20_;\n  wire _21_;\n  wire _22_;\n  wire _23_;\n  wire [4:0] ckt_out;\n  input [7:0] inputs;\n  wire [7:0] inputs;\n  input [7:0] key;\n  wire [7:0] key;\n  wire keyx;\n  output lock_out;\n  wire lock_out;\n  NOT_g _24_ (\n    .A(inputs[3]),\n    .Y(_00_)\n  );\n  XNOR_g _25_ (\n    .A(inputs[0]),\n    .B(key[0]),\n    .Y(_01_)\n  );\n  XNOR_g _26_ (\n    .A(inputs[7]),\n    .B(key[7]),\n    .Y(_02_)\n  );\n  AND_g _27_ (\n    .A(_01_),\n    .B(_02_),\n    .Y(_03_)\n  );\n  XNOR_g _28_ (\n    .A(inputs[1]),\n    .B(key[1]),\n    .Y(_04_)\n  );\n  XNOR_g _29_ (\n    .A(inputs[3]),\n    .B(key[3]),\n    .Y(_05_)\n  );\n  AND_g _30_ (\n    .A(_04_),\n    .B(_05_),\n    .Y(_06_)\n  );\n  AND_g _31_ (\n    .A(_03_),\n    .B(_06_),\n    .Y(_07_)\n  );\n  NOR_g _32_ (\n    .A(inputs[5]),\n    .B(inputs[6]),\n    .Y(_08_)\n  );\n  NOR_g _33_ (\n    .A(inputs[4]),\n    .B(inputs[7]),\n    .Y(_09_)\n  );\n  AND_g _34_ (\n    .A(_08_),\n    .B(_09_),\n    .Y(_10_)\n  );\n  NOR_g _35_ (\n    .A(inputs[1]),\n    .B(inputs[2]),\n    .Y(_11_)\n  );\n  AND_g _36_ (\n    .A(inputs[0]),\n    .B(_00_),\n    .Y(_12_)\n  );\n  AND_g _37_ (\n    .A(_11_),\n    .B(_12_),\n    .Y(_13_)\n  );\n  NAND_g _38_ (\n    .A(_10_),\n    .B(_13_),\n    .Y(_14_)\n  );\n  XNOR_g _39_ (\n    .A(inputs[5]),\n    .B(key[5]),\n    .Y(_15_)\n  );\n  XNOR_g _40_ (\n    .A(inputs[2]),\n    .B(key[2]),\n    .Y(_16_)\n  );\n  AND_g _41_ (\n    .A(_15_),\n    .B(_16_),\n    .Y(_17_)\n  );\n  XNOR_g _42_ (\n    .A(inputs[6]),\n    .B(key[6]),\n    .Y(_18_)\n  );\n  XNOR_g _43_ (\n    .A(inputs[4]),\n    .B(key[4]),\n    .Y(_19_)\n  );\n  AND_g _44_ (\n    .A(_18_),\n    .B(_19_),\n    .Y(_20_)\n  );\n  AND_g _45_ (\n    .A(_17_),\n    .B(_20_),\n    .Y(_21_)\n  );\n  AND_g _46_ (\n    .A(_14_),\n    .B(_21_),\n    .Y(_22_)\n  );\n  NAND_g _47_ (\n    .A(_07_),\n    .B(_22_),\n    .Y(_23_)\n  );\n  XNOR_g _48_ (\n    .A(ckt_out[0]),\n    .B(_23_),\n    .Y(lock_out)\n  );\n  ckt c (\n    .a(inputs[3:0]),\n    .b(inputs[7:4]),\n    .c(ckt_out)\n  );\n  assign keyx = 1'h1;\nendmodule\n",
        "top_module_name": "locked"
    },
    "top_module": {
        "Verilog": "module locked(inputs, key, out);\ninput [7:0] inputs;\ninput [7:0] key;\noutput out;\nsarlock s(.inputs(inputs), .key(key), .lock_out(out));\nendmodule",
        "Synthesized_verilog": "module locked(inputs, key, out);\n  input [7:0] inputs;\n  wire [7:0] inputs;\n  input [7:0] key;\n  wire [7:0] key;\n  output out;\n  wire out;\n  sarlock s (\n    .inputs(inputs),\n    .key(key),\n    .lock_out(out)\n  );\nendmodule",
        "Bench_format": "INPUT(inputs[0])\nINPUT(inputs[1])\nINPUT(inputs[2])\nINPUT(inputs[3])\nINPUT(inputs[4])\nINPUT(inputs[5])\nINPUT(inputs[6])\nINPUT(inputs[7])\nINPUT(key[0])\nINPUT(key[1])\nINPUT(key[2])\nINPUT(key[3])\nINPUT(key[4])\nINPUT(key[5])\nINPUT(key[6])\nINPUT(key[7])\nOUTPUT(out)\n",
        "Total_number_of_submodules": 2,
        "io": {
            "inputs": [
                "inputs[0]",
                "inputs[1]",
                "inputs[2]",
                "inputs[3]",
                "inputs[4]",
                "inputs[5]",
                "inputs[6]",
                "inputs[7]",
                "key[0]",
                "key[1]",
                "key[2]",
                "key[3]",
                "key[4]",
                "key[5]",
                "key[6]",
                "key[7]"
            ],
            "outputs": [
                "out"
            ],
            "input_ports": "inputs,key,",
            "output_ports": "out,"
        },
        "gates": {},
        "Linkages": {
            "s": {
                "module_name": "sarlock",
                "linkages": [
                    [
                        "inputs",
                        "inputs"
                    ],
                    [
                        "key",
                        "key"
                    ],
                    [
                        "lock_out",
                        "out"
                    ]
                ]
            }
        }
    },
    "submodules": {
        "ckt": {
            "Verilog": "module ckt(a,b,c);\ninput [3:0] a,b;\noutput [4:0] c;\nassign\tc = a + b;\nendmodule",
            "Synthesized_verilog": "module ckt(a, b, c);\n  wire _00_;\n  wire _01_;\n  wire _02_;\n  wire _03_;\n  wire _04_;\n  wire _05_;\n  wire _06_;\n  wire _07_;\n  wire _08_;\n  wire _09_;\n  wire _10_;\n  wire _11_;\n  input [3:0] a;\n  wire [3:0] a;\n  input [3:0] b;\n  wire [3:0] b;\n  output [4:0] c;\n  wire [4:0] c;\n  AND_g _12_ (\n    .A(a[0]),\n    .B(b[0]),\n    .Y(_00_)\n  );\n  NAND_g _13_ (\n    .A(a[1]),\n    .B(b[1]),\n    .Y(_01_)\n  );\n  XOR_g _14_ (\n    .A(a[1]),\n    .B(b[1]),\n    .Y(_02_)\n  );\n  NAND_g _15_ (\n    .A(_00_),\n    .B(_02_),\n    .Y(_03_)\n  );\n  XOR_g _16_ (\n    .A(_00_),\n    .B(_02_),\n    .Y(c[1])\n  );\n  NAND_g _17_ (\n    .A(_01_),\n    .B(_03_),\n    .Y(_04_)\n  );\n  NAND_g _18_ (\n    .A(a[2]),\n    .B(b[2]),\n    .Y(_05_)\n  );\n  XOR_g _19_ (\n    .A(a[2]),\n    .B(b[2]),\n    .Y(_06_)\n  );\n  NAND_g _20_ (\n    .A(_04_),\n    .B(_06_),\n    .Y(_07_)\n  );\n  XOR_g _21_ (\n    .A(_04_),\n    .B(_06_),\n    .Y(c[2])\n  );\n  NAND_g _22_ (\n    .A(_05_),\n    .B(_07_),\n    .Y(_08_)\n  );\n  NAND_g _23_ (\n    .A(a[3]),\n    .B(b[3]),\n    .Y(_09_)\n  );\n  XOR_g _24_ (\n    .A(a[3]),\n    .B(b[3]),\n    .Y(_10_)\n  );\n  NAND_g _25_ (\n    .A(_08_),\n    .B(_10_),\n    .Y(_11_)\n  );\n  XOR_g _26_ (\n    .A(_08_),\n    .B(_10_),\n    .Y(c[3])\n  );\n  XOR_g _27_ (\n    .A(a[0]),\n    .B(b[0]),\n    .Y(c[0])\n  );\n  NAND_g _28_ (\n    .A(_09_),\n    .B(_11_),\n    .Y(c[4])\n  );\nendmodule",
            "Bench_format": "INPUT(a,b[0])\nINPUT(a,b[1])\nINPUT(a,b[2])\nINPUT(a,b[3])\nOUTPUT(c[0])\nOUTPUT(c[1])\nOUTPUT(c[2])\nOUTPUT(c[3])\nOUTPUT(c[4])\n",
            "io": {
                "inputs": [
                    "a,b[0]",
                    "a,b[1]",
                    "a,b[2]",
                    "a,b[3]"
                ],
                "outputs": [
                    "c[0]",
                    "c[1]",
                    "c[2]",
                    "c[3]",
                    "c[4]"
                ],
                "input_ports": "a,b,",
                "output_ports": "c,"
            },
            "gates": {
                "_12_": {
                    "type": "AND",
                    "inputs": [
                        "a[0]",
                        "b[0]"
                    ],
                    "output": "_00_"
                },
                "_13_": {
                    "type": "NAND",
                    "inputs": [
                        "a[1]",
                        "b[1]"
                    ],
                    "output": "_01_"
                },
                "_14_": {
                    "type": "XOR",
                    "inputs": [
                        "a[1]",
                        "b[1]"
                    ],
                    "output": "_02_"
                },
                "_15_": {
                    "type": "NAND",
                    "inputs": [
                        "_00_",
                        "_02_"
                    ],
                    "output": "_03_"
                },
                "_16_": {
                    "type": "XOR",
                    "inputs": [
                        "_00_",
                        "_02_"
                    ],
                    "output": "c[1]"
                },
                "_17_": {
                    "type": "NAND",
                    "inputs": [
                        "_01_",
                        "_03_"
                    ],
                    "output": "_04_"
                },
                "_18_": {
                    "type": "NAND",
                    "inputs": [
                        "a[2]",
                        "b[2]"
                    ],
                    "output": "_05_"
                },
                "_19_": {
                    "type": "XOR",
                    "inputs": [
                        "a[2]",
                        "b[2]"
                    ],
                    "output": "_06_"
                },
                "_20_": {
                    "type": "NAND",
                    "inputs": [
                        "_04_",
                        "_06_"
                    ],
                    "output": "_07_"
                },
                "_21_": {
                    "type": "XOR",
                    "inputs": [
                        "_04_",
                        "_06_"
                    ],
                    "output": "c[2]"
                },
                "_22_": {
                    "type": "NAND",
                    "inputs": [
                        "_05_",
                        "_07_"
                    ],
                    "output": "_08_"
                },
                "_23_": {
                    "type": "NAND",
                    "inputs": [
                        "a[3]",
                        "b[3]"
                    ],
                    "output": "_09_"
                },
                "_24_": {
                    "type": "XOR",
                    "inputs": [
                        "a[3]",
                        "b[3]"
                    ],
                    "output": "_10_"
                },
                "_25_": {
                    "type": "NAND",
                    "inputs": [
                        "_08_",
                        "_10_"
                    ],
                    "output": "_11_"
                },
                "_26_": {
                    "type": "XOR",
                    "inputs": [
                        "_08_",
                        "_10_"
                    ],
                    "output": "c[3]"
                },
                "_27_": {
                    "type": "XOR",
                    "inputs": [
                        "a[0]",
                        "b[0]"
                    ],
                    "output": "c[0]"
                },
                "_28_": {
                    "type": "NAND",
                    "inputs": [
                        "_09_",
                        "_11_"
                    ],
                    "output": "c[4]"
                }
            },
            "Linkages": {}
        },
        "sarlock": {
            "Verilog": "module sarlock (inputs, key, lock_out);\ninput [7:0] inputs;\ninput [7:0] key;\noutput lock_out;\nreg keyx = 8'b01101101;\nassign lock_out =ckt_out[0]^( (inputs == key) & (inputs != keyx));\nwire [4:0]ckt_out; \nckt c(.a(inputs[3:0]), .b(inputs[7:4]), .c(ckt_out));\nendmodule",
            "Synthesized_verilog": "module sarlock(inputs, key, lock_out);\n  wire _00_;\n  wire _01_;\n  wire _02_;\n  wire _03_;\n  wire _04_;\n  wire _05_;\n  wire _06_;\n  wire _07_;\n  wire _08_;\n  wire _09_;\n  wire _10_;\n  wire _11_;\n  wire _12_;\n  wire _13_;\n  wire _14_;\n  wire _15_;\n  wire _16_;\n  wire _17_;\n  wire _18_;\n  wire _19_;\n  wire _20_;\n  wire _21_;\n  wire _22_;\n  wire _23_;\n  wire [4:0] ckt_out;\n  input [7:0] inputs;\n  wire [7:0] inputs;\n  input [7:0] key;\n  wire [7:0] key;\n  wire keyx;\n  output lock_out;\n  wire lock_out;\n  NOT_g _24_ (\n    .A(inputs[3]),\n    .Y(_00_)\n  );\n  XNOR_g _25_ (\n    .A(inputs[0]),\n    .B(key[0]),\n    .Y(_01_)\n  );\n  XNOR_g _26_ (\n    .A(inputs[7]),\n    .B(key[7]),\n    .Y(_02_)\n  );\n  AND_g _27_ (\n    .A(_01_),\n    .B(_02_),\n    .Y(_03_)\n  );\n  XNOR_g _28_ (\n    .A(inputs[1]),\n    .B(key[1]),\n    .Y(_04_)\n  );\n  XNOR_g _29_ (\n    .A(inputs[3]),\n    .B(key[3]),\n    .Y(_05_)\n  );\n  AND_g _30_ (\n    .A(_04_),\n    .B(_05_),\n    .Y(_06_)\n  );\n  AND_g _31_ (\n    .A(_03_),\n    .B(_06_),\n    .Y(_07_)\n  );\n  NOR_g _32_ (\n    .A(inputs[5]),\n    .B(inputs[6]),\n    .Y(_08_)\n  );\n  NOR_g _33_ (\n    .A(inputs[4]),\n    .B(inputs[7]),\n    .Y(_09_)\n  );\n  AND_g _34_ (\n    .A(_08_),\n    .B(_09_),\n    .Y(_10_)\n  );\n  NOR_g _35_ (\n    .A(inputs[1]),\n    .B(inputs[2]),\n    .Y(_11_)\n  );\n  AND_g _36_ (\n    .A(inputs[0]),\n    .B(_00_),\n    .Y(_12_)\n  );\n  AND_g _37_ (\n    .A(_11_),\n    .B(_12_),\n    .Y(_13_)\n  );\n  NAND_g _38_ (\n    .A(_10_),\n    .B(_13_),\n    .Y(_14_)\n  );\n  XNOR_g _39_ (\n    .A(inputs[5]),\n    .B(key[5]),\n    .Y(_15_)\n  );\n  XNOR_g _40_ (\n    .A(inputs[2]),\n    .B(key[2]),\n    .Y(_16_)\n  );\n  AND_g _41_ (\n    .A(_15_),\n    .B(_16_),\n    .Y(_17_)\n  );\n  XNOR_g _42_ (\n    .A(inputs[6]),\n    .B(key[6]),\n    .Y(_18_)\n  );\n  XNOR_g _43_ (\n    .A(inputs[4]),\n    .B(key[4]),\n    .Y(_19_)\n  );\n  AND_g _44_ (\n    .A(_18_),\n    .B(_19_),\n    .Y(_20_)\n  );\n  AND_g _45_ (\n    .A(_17_),\n    .B(_20_),\n    .Y(_21_)\n  );\n  AND_g _46_ (\n    .A(_14_),\n    .B(_21_),\n    .Y(_22_)\n  );\n  NAND_g _47_ (\n    .A(_07_),\n    .B(_22_),\n    .Y(_23_)\n  );\n  XNOR_g _48_ (\n    .A(ckt_out[0]),\n    .B(_23_),\n    .Y(lock_out)\n  );\n  ckt c (\n    .a(inputs[3:0]),\n    .b(inputs[7:4]),\n    .c(ckt_out)\n  );\n  assign keyx = 1'h1;\nendmodule",
            "Bench_format": "INPUT(inputs[0])\nINPUT(inputs[1])\nINPUT(inputs[2])\nINPUT(inputs[3])\nINPUT(inputs[4])\nINPUT(inputs[5])\nINPUT(inputs[6])\nINPUT(inputs[7])\nINPUT(key[0])\nINPUT(key[1])\nINPUT(key[2])\nINPUT(key[3])\nINPUT(key[4])\nINPUT(key[5])\nINPUT(key[6])\nINPUT(key[7])\nOUTPUT(lock_out)\n",
            "io": {
                "inputs": [
                    "inputs[0]",
                    "inputs[1]",
                    "inputs[2]",
                    "inputs[3]",
                    "inputs[4]",
                    "inputs[5]",
                    "inputs[6]",
                    "inputs[7]",
                    "key[0]",
                    "key[1]",
                    "key[2]",
                    "key[3]",
                    "key[4]",
                    "key[5]",
                    "key[6]",
                    "key[7]"
                ],
                "outputs": [
                    "lock_out"
                ],
                "input_ports": "inputs,key,",
                "output_ports": "lock_out,"
            },
            "gates": {
                "_25_": {
                    "type": "XNOR",
                    "inputs": [
                        "inputs[0]",
                        "key[0]"
                    ],
                    "output": "_01_"
                },
                "_26_": {
                    "type": "XNOR",
                    "inputs": [
                        "inputs[7]",
                        "key[7]"
                    ],
                    "output": "_02_"
                },
                "_27_": {
                    "type": "AND",
                    "inputs": [
                        "_01_",
                        "_02_"
                    ],
                    "output": "_03_"
                },
                "_28_": {
                    "type": "XNOR",
                    "inputs": [
                        "inputs[1]",
                        "key[1]"
                    ],
                    "output": "_04_"
                },
                "_29_": {
                    "type": "XNOR",
                    "inputs": [
                        "inputs[3]",
                        "key[3]"
                    ],
                    "output": "_05_"
                },
                "_30_": {
                    "type": "AND",
                    "inputs": [
                        "_04_",
                        "_05_"
                    ],
                    "output": "_06_"
                },
                "_31_": {
                    "type": "AND",
                    "inputs": [
                        "_03_",
                        "_06_"
                    ],
                    "output": "_07_"
                },
                "_32_": {
                    "type": "NOR",
                    "inputs": [
                        "inputs[5]",
                        "inputs[6]"
                    ],
                    "output": "_08_"
                },
                "_33_": {
                    "type": "NOR",
                    "inputs": [
                        "inputs[4]",
                        "inputs[7]"
                    ],
                    "output": "_09_"
                },
                "_34_": {
                    "type": "AND",
                    "inputs": [
                        "_08_",
                        "_09_"
                    ],
                    "output": "_10_"
                },
                "_35_": {
                    "type": "NOR",
                    "inputs": [
                        "inputs[1]",
                        "inputs[2]"
                    ],
                    "output": "_11_"
                },
                "_36_": {
                    "type": "AND",
                    "inputs": [
                        "inputs[0]",
                        "_00_"
                    ],
                    "output": "_12_"
                },
                "_37_": {
                    "type": "AND",
                    "inputs": [
                        "_11_",
                        "_12_"
                    ],
                    "output": "_13_"
                },
                "_38_": {
                    "type": "NAND",
                    "inputs": [
                        "_10_",
                        "_13_"
                    ],
                    "output": "_14_"
                },
                "_39_": {
                    "type": "XNOR",
                    "inputs": [
                        "inputs[5]",
                        "key[5]"
                    ],
                    "output": "_15_"
                },
                "_40_": {
                    "type": "XNOR",
                    "inputs": [
                        "inputs[2]",
                        "key[2]"
                    ],
                    "output": "_16_"
                },
                "_41_": {
                    "type": "AND",
                    "inputs": [
                        "_15_",
                        "_16_"
                    ],
                    "output": "_17_"
                },
                "_42_": {
                    "type": "XNOR",
                    "inputs": [
                        "inputs[6]",
                        "key[6]"
                    ],
                    "output": "_18_"
                },
                "_43_": {
                    "type": "XNOR",
                    "inputs": [
                        "inputs[4]",
                        "key[4]"
                    ],
                    "output": "_19_"
                },
                "_44_": {
                    "type": "AND",
                    "inputs": [
                        "_18_",
                        "_19_"
                    ],
                    "output": "_20_"
                },
                "_45_": {
                    "type": "AND",
                    "inputs": [
                        "_17_",
                        "_20_"
                    ],
                    "output": "_21_"
                },
                "_46_": {
                    "type": "AND",
                    "inputs": [
                        "_14_",
                        "_21_"
                    ],
                    "output": "_22_"
                },
                "_47_": {
                    "type": "NAND",
                    "inputs": [
                        "_07_",
                        "_22_"
                    ],
                    "output": "_23_"
                },
                "_48_": {
                    "type": "XNOR",
                    "inputs": [
                        "ckt_out[0]",
                        "_23_"
                    ],
                    "output": "lock_out"
                }
            },
            "Linkages": {
                "c": {
                    "module_name": "ckt",
                    "linkages": [
                        [
                            "a",
                            "inputs[3:0]"
                        ],
                        [
                            "b",
                            "inputs[7:4]"
                        ],
                        [
                            "c",
                            "ckt_out"
                        ]
                    ]
                }
            }
        }
    }
}